tolerations: []
podSecurityContext: {}
securityContext: {}

service: &common-service-definition
  type: ClusterIP
  servicePort: 9090
  ports:
    - name: http
      port: 9090
      protocol: TCP
      targetPort: http

volumes: &common-volumes
  pg-service-conf-secret:
    secret:
      secretName: pg-service-conf-secret
      items:
        - key: pg_service_conf
          path: pg_service.conf
  # v-qwc-data must be defined as NFS or emptyDir otherwise you
  # get "error converting YAML to JSON"...
  # see the examples
  v-qwc-data:
    persistentVolumeClaim:
      claimName: v-qwc-data

volumeMounts: &common-volume-mounts
  /srv/pg_service.conf:
    name: pg-service-conf-secret
    subPath: pg_service.conf
    readOnly: true
  /srv/qwc_service/config:
    name: v-qwc-data
    subPath: config

ports: &common-ports
  http:
    containerPort: 9090
    name: http
    protocol: TCP
    # hostIP: 127.0.0.1

env: &common-env
  JWT_COOKIE_CSRF_PROTECT:
    value: 'False'
  JWT_SECRET_KEY:
    type: secret
    name: jwt-key-secret
    key: JWT_SECRET_KEY

# Common generic stuff needed
# from helm-custom-pod dependency
common-generic-stuff: &common-generic-stuff
  replicaCount: 1
  initContainers: {}
  nodeSelector: {}
  affinity: {}

# TODO: do something for this configmap
config:
  # replace UNSECURE_KEY with:
  # `python3 -c 'import secrets; print( secrets.token_hex(48) )'`
  jwt:
    create: true
  pg:
    create: true
    conf: |-
      [qwc_configdb]
      host=qwc-postgis
      port=5432
      dbname=qwc_demo
      user=qwc_admin
      password=qwc_admin
      sslmode=disable

      [qwc_geodb]
      host=qwc-postgis
      port=5432
      dbname=qwc_demo
      user=qwc_service
      password=qwc_service
      sslmode=disable

      [qwc_geodb]
      host=qwc-postgis
      port=5432
      dbname=qwc_demo
      user=qwc_service_write
      password=qwc_service_write
      sslmode=disable

qgis:
  ingress:
    enabled: false

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: qwc
  securityContext:
    runAsNonRoot: true
    runAsUser: 33
  services:
    qgis-server:
      enabled: true
      ingress:
        enabled: false
      <<: *common-generic-stuff
      service:
        type: ClusterIP
        name: qwc-qgis-server
        servicePort: 80
        ports:
          - name: http
            port: 80
            protocol: TCP
            targetPort: http
      volumes:
        <<: *common-volumes
      containers:
        qgis:
          image:
            repository: sourcepole/qwc-qgis-server
            tag: '3.44'
            sha: ''
          ports:
            http:
              containerPort: 8080
          volumeMounts:
            /data:
              name: v-qwc-data
              subPath: qgs-resources
              readOnly: true
          env:
            <<: *common-env
            PORT:
              value: '8080'

qwc:
  ingress:
    enabled: false
    # hostGroups:
    #   host1:
    #     tls:
    #       enabled: true
    #       secretName: 'my-tls-secret'
    #     hosts:
    #       - test1.example.com
    #       - test2.example.com
    #   host2:
    #     tls:
    #       enabled: true
    #       secretName: 'my-wildcard-tls-secret'
    #     hosts:
    #       - '*.example.com'

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: qwc
  services:
    admin-gui:
      enabled: true
      ingress:
        enabled: true
        path: /qwc_admin
      <<: *common-generic-stuff
      service:
        <<: *common-service-definition
      volumes:
        <<: *common-volumes
      containers:
        uwsgi:
          image:
            repository: sourcepole/qwc-admin-gui
            tag: v2024.8-lts
            sha: ''
          ports:
            <<: *common-ports
          volumeMounts:
            <<: *common-volume-mounts
          env:
            <<: *common-env
            MAIL_DEFAULT_SENDER:
              value: 'from@example.com'
            MAIL_SUPPRESS_SEND:
              value: 'True'
            IDLE_TIMEOUT:
              value: '600'
            GROUP_REGISTRATION_ENABLED:
              value: 'False'
            DEFAULT_LOCALE:
              value: en
    auth-service:
      enabled: true
      ingress:
        enabled: true
        path: /auth
      <<: *common-generic-stuff
      service:
        <<: *common-service-definition
      volumes:
        <<: *common-volumes
      containers:
        uwsgi:
          image:
            repository: sourcepole/qwc-db-auth
            tag: v2024.4-lts
            sha: ''
          ports:
            <<: *common-ports
          volumeMounts:
            <<: *common-volume-mounts
          env:
            <<: *common-env
            MAIL_DEFAULT_SENDER:
              value: from@example.com
            MAIL_SUPPRESS_SEND:
              value: 'True'
            SERVICE_MOUNTPOINT:
              value: /auth
    config-service:
      enabled: true
      ingress:
        enabled: false
      <<: *common-generic-stuff
      service:
        <<: *common-service-definition
      volumes:
        <<: *common-volumes
        # mount v-qwc-data in RW
      containers:
        uwsgi:
          image:
            repository: sourcepole/qwc-config-generator
            tag: v2024.7-lts
            sha: ''
          ports:
            <<: *common-ports
          volumeMounts:
            <<: *common-volume-mounts
            /srv/qwc_service/config-in:
              name: v-qwc-data
              subPath: config-in
              readOnly: true
            /srv/qwc_service/config-out:
              name: v-qwc-data
              subPath: config
            /qwc2:
              name: v-qwc-data
              subPath: qwc2
            /data:
              name: v-qwc-data
              subPath: qgs-resources
          env:
            <<: *common-env
            INPUT_CONFIG_PATH:
              value: /srv/qwc_service/config-in
            OUTPUT_CONFIG_PATH:
              value: /srv/qwc_service/config-out
    data-service:
      enabled: true
      ingress:
        enabled: true
        path: /api/v1/data
      <<: *common-generic-stuff
      service:
        <<: *common-service-definition
      volumes:
        <<: *common-volumes
      containers:
        uwsgi:
          image:
            repository: sourcepole/qwc-data-service
            tag: v2024.5-lts
            sha: ''
          ports:
            <<: *common-ports
          volumeMounts:
            <<: *common-volume-mounts
            /attachments:
              name: v-qwc-data
              subPath: attachments
              readOnly: true
          env:
            <<: *common-env
            SERVICE_MOUNTPOINT:
              value: /api/v1/data
    document-service:
      enabled: true
      ingress:
        enabled: false
      <<: *common-generic-stuff
      service:
        <<: *common-service-definition
      volumes:
        <<: *common-volumes
      containers:
        uwsgi:
          image:
            repository: sourcepole/qwc-document-service
            tag: v2024.2-lts
            sha: ''
          ports:
            <<: *common-ports
          volumeMounts:
            <<: *common-volume-mounts
          env:
            <<: *common-env
            SERVICE_MOUNTPOINT:
              value: /api/v1/document
    elevation-service:
      enabled: true
      ingress:
        enabled: true
        path: /elevation
      <<: *common-generic-stuff
      service:
        <<: *common-service-definition
      volumes:
        <<: *common-volumes
      containers:
        uwsgi:
          image:
            repository: sourcepole/qwc-elevation-service
            tag: v2024.2-lts
            sha: ''
          ports:
            <<: *common-ports
          volumeMounts:
            <<: *common-volume-mounts
          env:
            <<: *common-env
    feature-info-service:
      enabled: true
      ingress:
        enabled: true
        path: /api/v1/featureinfo
      <<: *common-generic-stuff
      service:
        <<: *common-service-definition
      volumes:
        <<: *common-volumes
      containers:
        uwsgi:
          image:
            repository: sourcepole/qwc-feature-info-service
            tag: v2024.12.10
            sha: ''
          ports:
            <<: *common-ports
          volumeMounts:
            <<: *common-volume-mounts
          env:
            <<: *common-env
            SERVICE_MOUNTPOINT:
              value: /api/v1/featureinfo
    fulltext-search-service:
      enabled: true
      ingress:
        enabled: true
        path: /api/v2/search
      <<: *common-generic-stuff
      service:
        <<: *common-service-definition
      volumes:
        <<: *common-volumes
      containers:
        uwsgi:
          image:
            repository: sourcepole/qwc-fulltext-search-service
            tag: v2024.4-lts
            sha: ''
          ports:
            <<: *common-ports
          volumeMounts:
            <<: *common-volume-mounts
          env:
            <<: *common-env
            SERVICE_MOUNTPOINT:
              value: /api/v2/search
    mapinfo-service:
      enabled: true
      ingress:
        enabled: true
        path: /api/v1/mapinfo/
      <<: *common-generic-stuff
      service:
        <<: *common-service-definition
      volumes:
        <<: *common-volumes
      containers:
        uwsgi:
          image:
            repository: sourcepole/qwc-mapinfo-service
            tag: v2024.4-lts
            sha: ''
          ports:
            <<: *common-ports
          volumeMounts:
            <<: *common-volume-mounts
          env:
            <<: *common-env
            SERVICE_MOUNTPOINT:
              value: /api/v1/mapinfo
    legend-service:
      enabled: true
      ingress:
        enabled: true
        path: /api/v1/legend
      <<: *common-generic-stuff
      service:
        <<: *common-service-definition
      volumes:
        <<: *common-volumes
      containers:
        uwsgi:
          image:
            repository: sourcepole/qwc-legend-service
            tag: v2024.2-lts
            sha: ''
          ports:
            <<: *common-ports
          volumeMounts:
            <<: *common-volume-mounts
            /legends:
              name: v-qwc-data
              subPath: legends
              readOnly: true
          env:
            <<: *common-env
            SERVICE_MOUNTPOINT:
              value: /api/v1/legend
    print-service:
      enabled: true
      ingress:
        enabled: true
        path: /api/v1/print
      <<: *common-generic-stuff
      service:
        <<: *common-service-definition
      volumes:
        <<: *common-volumes
      containers:
        uwsgi:
          image:
            repository: sourcepole/qwc-print-service
            tag: v2024.2-lts
            sha: ''
          ports:
            <<: *common-ports
          volumeMounts:
            <<: *common-volume-mounts
          env:
            <<: *common-env
            SERVICE_MOUNTPOINT:
              value: /api/v1/print
    map-viewer:
      enabled: true
      ingress:
        enabled: true
        path: /
      <<: *common-generic-stuff
      service:
        <<: *common-service-definition
      volumes:
        <<: *common-volumes
      containers:
        uwsgi:
          image:
            repository: sourcepole/qwc-map-viewer-demo
            tag: v2024.18-lts
            sha: ''
          ports:
            <<: *common-ports
          volumeMounts:
            <<: *common-volume-mounts
          env:
            <<: *common-env
    ogc-service:
      enabled: true
      ingress:
        enabled: true
        path: /ows
      <<: *common-generic-stuff
      service:
        <<: *common-service-definition
      volumes:
        <<: *common-volumes
      containers:
        uwsgi:
          image:
            repository: sourcepole/qwc-ogc-service
            tag: v2024.5-lts
            sha: ''
          ports:
            <<: *common-ports
          volumeMounts:
            <<: *common-volume-mounts
          env:
            <<: *common-env
            SERVICE_MOUNTPOINT:
              value: /ows
    permalink-service:
      enabled: true
      ingress:
        enabled: true
        path: /api/v1/permalink
      <<: *common-generic-stuff
      service:
        <<: *common-service-definition
      volumes:
        <<: *common-volumes
      containers:
        uwsgi:
          image:
            repository: sourcepole/qwc-permalink-service
            tag: v2024.4-lts
            sha: ''
          ports:
            <<: *common-ports
          volumeMounts:
            <<: *common-volume-mounts
          env:
            <<: *common-env
            SERVICE_MOUNTPOINT:
              value: /api/v1/permalink
    solr:
      enabled: true
      ingress:
        enabled: false
      <<: *common-generic-stuff
      volumes:
        <<: *common-volumes
      service:
        type: ClusterIP
        servicePort: 8983
        ports:
          - name: http
            port: 8983
            protocol: TCP
            targetPort: http
      containers:
        solr:
          image:
            repository: solr
            tag: 8.11-slim
            sha: ''
          ports:
            http:
              containerPort: 8983
              hostIP: 127.0.0.1
          volumeMounts:
            <<: *common-volume-mounts
            # Configuration is copied once from /gdi_conf/ to /var/solr/data/
            # Change ownership to solr user with `sudo chown 8983:8983 volumes/solr/data`
            /gdi_conf:
              name: v-qwc-data
              subPath: solr/configsets/gdi/conf
              readOnly: true
              # TODO:
              #
              # Protect admin GUI and admin API with Basic auth
              # Change "#credentials" to "credentials" in security.json for adding a user 'solr' with password 'SolrRocks'
              #- ./volumes/solr/security.json:/var/solr/data/security.json:ro
            /var/solr:
              name: v-qwc-data
              subPath: solr
          env:
            <<: *common-env
