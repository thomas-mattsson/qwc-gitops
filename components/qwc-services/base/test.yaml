apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qgis
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qgis
  name: qwc-qgis
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc
---
apiVersion: v1
data:
  pg_service_conf: W3F3Y19jb25maWdkYl0KaG9zdD1xd2MtcG9zdGdpcwpwb3J0PTU0MzIKZGJuYW1lPXF3Y19kZW1vCnVzZXI9cXdjX2FkbWluCnBhc3N3b3JkPXF3Y19hZG1pbgpzc2xtb2RlPWRpc2FibGUKCltxd2NfZ2VvZGJdCmhvc3Q9cXdjLXBvc3RnaXMKcG9ydD01NDMyCmRibmFtZT1xd2NfZGVtbwp1c2VyPXF3Y19zZXJ2aWNlCnBhc3N3b3JkPXF3Y19zZXJ2aWNlCnNzbG1vZGU9ZGlzYWJsZQoKW3F3Y19nZW9kYl0KaG9zdD1xd2MtcG9zdGdpcwpwb3J0PTU0MzIKZGJuYW1lPXF3Y19kZW1vCnVzZXI9cXdjX3NlcnZpY2Vfd3JpdGUKcGFzc3dvcmQ9cXdjX3NlcnZpY2Vfd3JpdGUKc3NsbW9kZT1kaXNhYmxl
kind: Secret
metadata:
  name: pg-service-conf-secret
  namespace: qwc
type: Opaque
---
apiVersion: v1
data:
  JWT_SECRET_KEY: UTBOS1FtUTBlbUZOTnpOWk5uaEJURk5GWkZOTGF6SjVhbGxzTkZWamVsZz0=
kind: Secret
metadata:
  annotations:
    helm.sh/resource-policy: keep
  name: jwt-key-secret
type: Opaque
---
apiVersion: v1
data:
  .dockerconfigjson: ewogICJhdXRocyI6IHsKICAgICJmaXgtZW5kLWNvbW1hIjogeyJhdXRoIjogIiJ9CiAgfQp9
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: dockerregistry
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qgis
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qgis
  name: qwc-qgis-dockerregistry
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
data:
  .dockerconfigjson: ewogICJhdXRocyI6IHsKICAgICJmaXgtZW5kLWNvbW1hIjogeyJhdXRoIjogIiJ9CiAgfQp9
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: dockerregistry
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-dockerregistry
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: qgis-server
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qgis
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qgis
  name: qwc-qgis-server
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: qgis-server
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/name: qgis
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: admin-gui
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-admin-gui
spec:
  ports:
  - name: http
    port: 9090
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: admin-gui
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/name: qwc
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: auth-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-auth-service
spec:
  ports:
  - name: http
    port: 9090
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: auth-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/name: qwc
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: config-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-config-service
spec:
  ports:
  - name: http
    port: 9090
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: config-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/name: qwc
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: data-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-data-service
spec:
  ports:
  - name: http
    port: 9090
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: data-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/name: qwc
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: document-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-document-service
spec:
  ports:
  - name: http
    port: 9090
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: document-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/name: qwc
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: elevation-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-elevation-service
spec:
  ports:
  - name: http
    port: 9090
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: elevation-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/name: qwc
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: feature-info-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-feature-info-service
spec:
  ports:
  - name: http
    port: 9090
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: feature-info-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/name: qwc
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: fulltext-search-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-fulltext-search-service
spec:
  ports:
  - name: http
    port: 9090
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: fulltext-search-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/name: qwc
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: legend-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-legend-service
spec:
  ports:
  - name: http
    port: 9090
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: legend-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/name: qwc
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: map-viewer
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-map-viewer
spec:
  ports:
  - name: http
    port: 9090
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: map-viewer
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/name: qwc
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: mapinfo-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-mapinfo-service
spec:
  ports:
  - name: http
    port: 9090
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: mapinfo-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/name: qwc
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: ogc-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-ogc-service
spec:
  ports:
  - name: http
    port: 9090
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: ogc-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/name: qwc
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: permalink-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-permalink-service
spec:
  ports:
  - name: http
    port: 9090
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: permalink-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/name: qwc
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: print-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-print-service
spec:
  ports:
  - name: http
    port: 9090
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: print-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/name: qwc
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: solr
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-solr
spec:
  ports:
  - name: http
    port: 8983
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: solr
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/name: qwc
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: qgis-server
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qgis
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qgis
  name: qwc-qgis-qgis-server
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: qgis-server
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qgis
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: qgis-server
        app.kubernetes.io/instance: qwc
        app.kubernetes.io/name: qgis
    spec:
      containers:
      - env:
        - name: JWT_COOKIE_CSRF_PROTECT
          value: "False"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET_KEY
              name: jwt-key-secret
        - name: PORT
          value: "8080"
        image: sourcepole/qwc-qgis-server:3.44
        imagePullPolicy: IfNotPresent
        name: qgis
        ports:
        - containerPort: 8080
          name: http
        securityContext:
          runAsNonRoot: true
          runAsUser: 33
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /data
          name: v-qwc-data
          readOnly: true
          subPath: qgs-resources
      imagePullSecrets:
      - name: qwc-qgis-dockerregistry
      securityContext: {}
      serviceAccountName: qwc-qgis
      volumes:
      - name: pg-service-conf-secret
        secret:
          items:
          - key: pg_service_conf
            path: pg_service.conf
          secretName: pg-service-conf-secret
      - name: v-qwc-data
        persistentVolumeClaim:
          claimName: v-qwc-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: admin-gui
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-admin-gui
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: admin-gui
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admin-gui
        app.kubernetes.io/instance: qwc
        app.kubernetes.io/name: qwc
    spec:
      containers:
      - env:
        - name: DEFAULT_LOCALE
          value: en
        - name: GROUP_REGISTRATION_ENABLED
          value: "False"
        - name: IDLE_TIMEOUT
          value: "600"
        - name: JWT_COOKIE_CSRF_PROTECT
          value: "False"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET_KEY
              name: jwt-key-secret
        - name: MAIL_DEFAULT_SENDER
          value: from@example.com
        - name: MAIL_SUPPRESS_SEND
          value: "True"
        image: sourcepole/qwc-admin-gui:v2024.8-lts
        imagePullPolicy: IfNotPresent
        name: uwsgi
        ports:
        - containerPort: 9090
          name: http
        securityContext:
          allowPrivilegeEscalation: true
          fsGroup: 33
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /srv/pg_service.conf
          name: pg-service-conf-secret
          readOnly: true
          subPath: pg_service.conf
        - mountPath: /srv/qwc_service/config
          name: v-qwc-data
          subPath: config
      imagePullSecrets:
      - name: qwc-qwc-dockerregistry
      securityContext: {}
      serviceAccountName: qwc-qwc
      volumes:
      - name: pg-service-conf-secret
        secret:
          items:
          - key: pg_service_conf
            path: pg_service.conf
          secretName: pg-service-conf-secret
      - name: v-qwc-data
        persistentVolumeClaim:
          claimName: v-qwc-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: auth-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-auth-service
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: auth-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: auth-service
        app.kubernetes.io/instance: qwc
        app.kubernetes.io/name: qwc
    spec:
      containers:
      - env:
        - name: JWT_COOKIE_CSRF_PROTECT
          value: "False"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET_KEY
              name: jwt-key-secret
        - name: MAIL_DEFAULT_SENDER
          value: from@example.com
        - name: MAIL_SUPPRESS_SEND
          value: "True"
        - name: SERVICE_MOUNTPOINT
          value: /auth
        image: sourcepole/qwc-db-auth:v2024.4-lts
        imagePullPolicy: IfNotPresent
        name: uwsgi
        ports:
        - containerPort: 9090
          name: http
        securityContext:
          allowPrivilegeEscalation: true
          fsGroup: 33
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /srv/pg_service.conf
          name: pg-service-conf-secret
          readOnly: true
          subPath: pg_service.conf
        - mountPath: /srv/qwc_service/config
          name: v-qwc-data
          subPath: config
      imagePullSecrets:
      - name: qwc-qwc-dockerregistry
      securityContext: {}
      serviceAccountName: qwc-qwc
      volumes:
      - name: pg-service-conf-secret
        secret:
          items:
          - key: pg_service_conf
            path: pg_service.conf
          secretName: pg-service-conf-secret
      - name: v-qwc-data
        persistentVolumeClaim:
          claimName: v-qwc-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: config-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-config-service
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: config-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: config-service
        app.kubernetes.io/instance: qwc
        app.kubernetes.io/name: qwc
    spec:
      containers:
      - env:
        - name: INPUT_CONFIG_PATH
          value: /srv/qwc_service/config-in
        - name: JWT_COOKIE_CSRF_PROTECT
          value: "False"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET_KEY
              name: jwt-key-secret
        - name: OUTPUT_CONFIG_PATH
          value: /srv/qwc_service/config-out
        image: sourcepole/qwc-config-generator:v2024.7-lts
        imagePullPolicy: IfNotPresent
        name: uwsgi
        ports:
        - containerPort: 9090
          name: http
        securityContext:
          allowPrivilegeEscalation: true
          fsGroup: 33
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /data
          name: v-qwc-data
          subPath: qgs-resources
        - mountPath: /qwc2
          name: v-qwc-data
          subPath: qwc2
        - mountPath: /srv/pg_service.conf
          name: pg-service-conf-secret
          readOnly: true
          subPath: pg_service.conf
        - mountPath: /srv/qwc_service/config
          name: v-qwc-data
          subPath: config
        - mountPath: /srv/qwc_service/config-in
          name: v-qwc-data
          readOnly: true
          subPath: config-in
        - mountPath: /srv/qwc_service/config-out
          name: v-qwc-data
          subPath: config
      imagePullSecrets:
      - name: qwc-qwc-dockerregistry
      securityContext: {}
      serviceAccountName: qwc-qwc
      volumes:
      - name: pg-service-conf-secret
        secret:
          items:
          - key: pg_service_conf
            path: pg_service.conf
          secretName: pg-service-conf-secret
      - name: v-qwc-data
        persistentVolumeClaim:
          claimName: v-qwc-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: data-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-data-service
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: data-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: data-service
        app.kubernetes.io/instance: qwc
        app.kubernetes.io/name: qwc
    spec:
      containers:
      - env:
        - name: JWT_COOKIE_CSRF_PROTECT
          value: "False"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET_KEY
              name: jwt-key-secret
        - name: SERVICE_MOUNTPOINT
          value: /api/v1/data
        image: sourcepole/qwc-data-service:v2024.5-lts
        imagePullPolicy: IfNotPresent
        name: uwsgi
        ports:
        - containerPort: 9090
          name: http
        securityContext:
          allowPrivilegeEscalation: true
          fsGroup: 33
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /attachments
          name: v-qwc-data
          readOnly: true
          subPath: attachments
        - mountPath: /srv/pg_service.conf
          name: pg-service-conf-secret
          readOnly: true
          subPath: pg_service.conf
        - mountPath: /srv/qwc_service/config
          name: v-qwc-data
          subPath: config
      imagePullSecrets:
      - name: qwc-qwc-dockerregistry
      securityContext: {}
      serviceAccountName: qwc-qwc
      volumes:
      - name: pg-service-conf-secret
        secret:
          items:
          - key: pg_service_conf
            path: pg_service.conf
          secretName: pg-service-conf-secret
      - name: v-qwc-data
        persistentVolumeClaim:
          claimName: v-qwc-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: document-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-document-service
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: document-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: document-service
        app.kubernetes.io/instance: qwc
        app.kubernetes.io/name: qwc
    spec:
      containers:
      - env:
        - name: JWT_COOKIE_CSRF_PROTECT
          value: "False"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET_KEY
              name: jwt-key-secret
        - name: SERVICE_MOUNTPOINT
          value: /api/v1/document
        image: sourcepole/qwc-document-service:v2024.2-lts
        imagePullPolicy: IfNotPresent
        name: uwsgi
        ports:
        - containerPort: 9090
          name: http
        securityContext:
          allowPrivilegeEscalation: true
          fsGroup: 33
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /srv/pg_service.conf
          name: pg-service-conf-secret
          readOnly: true
          subPath: pg_service.conf
        - mountPath: /srv/qwc_service/config
          name: v-qwc-data
          subPath: config
      imagePullSecrets:
      - name: qwc-qwc-dockerregistry
      securityContext: {}
      serviceAccountName: qwc-qwc
      volumes:
      - name: pg-service-conf-secret
        secret:
          items:
          - key: pg_service_conf
            path: pg_service.conf
          secretName: pg-service-conf-secret
      - name: v-qwc-data
        persistentVolumeClaim:
          claimName: v-qwc-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: elevation-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-elevation-service
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: elevation-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: elevation-service
        app.kubernetes.io/instance: qwc
        app.kubernetes.io/name: qwc
    spec:
      containers:
      - env:
        - name: JWT_COOKIE_CSRF_PROTECT
          value: "False"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET_KEY
              name: jwt-key-secret
        image: sourcepole/qwc-elevation-service:v2024.2-lts
        imagePullPolicy: IfNotPresent
        name: uwsgi
        ports:
        - containerPort: 9090
          name: http
        securityContext:
          allowPrivilegeEscalation: true
          fsGroup: 33
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /srv/pg_service.conf
          name: pg-service-conf-secret
          readOnly: true
          subPath: pg_service.conf
        - mountPath: /srv/qwc_service/config
          name: v-qwc-data
          subPath: config
      imagePullSecrets:
      - name: qwc-qwc-dockerregistry
      securityContext: {}
      serviceAccountName: qwc-qwc
      volumes:
      - name: pg-service-conf-secret
        secret:
          items:
          - key: pg_service_conf
            path: pg_service.conf
          secretName: pg-service-conf-secret
      - name: v-qwc-data
        persistentVolumeClaim:
          claimName: v-qwc-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: feature-info-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-feature-info-service
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: feature-info-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: feature-info-service
        app.kubernetes.io/instance: qwc
        app.kubernetes.io/name: qwc
    spec:
      containers:
      - env:
        - name: JWT_COOKIE_CSRF_PROTECT
          value: "False"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET_KEY
              name: jwt-key-secret
        - name: SERVICE_MOUNTPOINT
          value: /api/v1/featureinfo
        image: sourcepole/qwc-feature-info-service:v2024.12.10
        imagePullPolicy: IfNotPresent
        name: uwsgi
        ports:
        - containerPort: 9090
          name: http
        securityContext:
          allowPrivilegeEscalation: true
          fsGroup: 33
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /srv/pg_service.conf
          name: pg-service-conf-secret
          readOnly: true
          subPath: pg_service.conf
        - mountPath: /srv/qwc_service/config
          name: v-qwc-data
          subPath: config
      imagePullSecrets:
      - name: qwc-qwc-dockerregistry
      securityContext: {}
      serviceAccountName: qwc-qwc
      volumes:
      - name: pg-service-conf-secret
        secret:
          items:
          - key: pg_service_conf
            path: pg_service.conf
          secretName: pg-service-conf-secret
      - name: v-qwc-data
        persistentVolumeClaim:
          claimName: v-qwc-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: fulltext-search-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-fulltext-search-service
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: fulltext-search-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: fulltext-search-service
        app.kubernetes.io/instance: qwc
        app.kubernetes.io/name: qwc
    spec:
      containers:
      - env:
        - name: JWT_COOKIE_CSRF_PROTECT
          value: "False"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET_KEY
              name: jwt-key-secret
        - name: SERVICE_MOUNTPOINT
          value: /api/v2/search
        image: sourcepole/qwc-fulltext-search-service:v2024.4-lts
        imagePullPolicy: IfNotPresent
        name: uwsgi
        ports:
        - containerPort: 9090
          name: http
        securityContext:
          allowPrivilegeEscalation: true
          fsGroup: 33
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /srv/pg_service.conf
          name: pg-service-conf-secret
          readOnly: true
          subPath: pg_service.conf
        - mountPath: /srv/qwc_service/config
          name: v-qwc-data
          subPath: config
      imagePullSecrets:
      - name: qwc-qwc-dockerregistry
      securityContext: {}
      serviceAccountName: qwc-qwc
      volumes:
      - name: pg-service-conf-secret
        secret:
          items:
          - key: pg_service_conf
            path: pg_service.conf
          secretName: pg-service-conf-secret
      - name: v-qwc-data
        persistentVolumeClaim:
          claimName: v-qwc-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: legend-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-legend-service
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: legend-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: legend-service
        app.kubernetes.io/instance: qwc
        app.kubernetes.io/name: qwc
    spec:
      containers:
      - env:
        - name: JWT_COOKIE_CSRF_PROTECT
          value: "False"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET_KEY
              name: jwt-key-secret
        - name: SERVICE_MOUNTPOINT
          value: /api/v1/legend
        image: sourcepole/qwc-legend-service:v2024.2-lts
        imagePullPolicy: IfNotPresent
        name: uwsgi
        ports:
        - containerPort: 9090
          name: http
        securityContext:
          allowPrivilegeEscalation: true
          fsGroup: 33
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /legends
          name: v-qwc-data
          readOnly: true
          subPath: legends
        - mountPath: /srv/pg_service.conf
          name: pg-service-conf-secret
          readOnly: true
          subPath: pg_service.conf
        - mountPath: /srv/qwc_service/config
          name: v-qwc-data
          subPath: config
      imagePullSecrets:
      - name: qwc-qwc-dockerregistry
      securityContext: {}
      serviceAccountName: qwc-qwc
      volumes:
      - name: pg-service-conf-secret
        secret:
          items:
          - key: pg_service_conf
            path: pg_service.conf
          secretName: pg-service-conf-secret
      - name: v-qwc-data
        persistentVolumeClaim:
          claimName: v-qwc-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: map-viewer
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-map-viewer
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: map-viewer
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: map-viewer
        app.kubernetes.io/instance: qwc
        app.kubernetes.io/name: qwc
    spec:
      containers:
      - env:
        - name: JWT_COOKIE_CSRF_PROTECT
          value: "False"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET_KEY
              name: jwt-key-secret
        image: sourcepole/qwc-map-viewer-demo:v2024.18-lts
        imagePullPolicy: IfNotPresent
        name: uwsgi
        ports:
        - containerPort: 9090
          name: http
        securityContext:
          allowPrivilegeEscalation: true
          fsGroup: 33
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /srv/pg_service.conf
          name: pg-service-conf-secret
          readOnly: true
          subPath: pg_service.conf
        - mountPath: /srv/qwc_service/config
          name: v-qwc-data
          subPath: config
      imagePullSecrets:
      - name: qwc-qwc-dockerregistry
      securityContext: {}
      serviceAccountName: qwc-qwc
      volumes:
      - name: pg-service-conf-secret
        secret:
          items:
          - key: pg_service_conf
            path: pg_service.conf
          secretName: pg-service-conf-secret
      - name: v-qwc-data
        persistentVolumeClaim:
          claimName: v-qwc-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: mapinfo-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-mapinfo-service
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: mapinfo-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: mapinfo-service
        app.kubernetes.io/instance: qwc
        app.kubernetes.io/name: qwc
    spec:
      containers:
      - env:
        - name: JWT_COOKIE_CSRF_PROTECT
          value: "False"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET_KEY
              name: jwt-key-secret
        - name: SERVICE_MOUNTPOINT
          value: /api/v1/mapinfo
        image: sourcepole/qwc-mapinfo-service:v2024.4-lts
        imagePullPolicy: IfNotPresent
        name: uwsgi
        ports:
        - containerPort: 9090
          name: http
        securityContext:
          allowPrivilegeEscalation: true
          fsGroup: 33
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /srv/pg_service.conf
          name: pg-service-conf-secret
          readOnly: true
          subPath: pg_service.conf
        - mountPath: /srv/qwc_service/config
          name: v-qwc-data
          subPath: config
      imagePullSecrets:
      - name: qwc-qwc-dockerregistry
      securityContext: {}
      serviceAccountName: qwc-qwc
      volumes:
      - name: pg-service-conf-secret
        secret:
          items:
          - key: pg_service_conf
            path: pg_service.conf
          secretName: pg-service-conf-secret
      - name: v-qwc-data
        persistentVolumeClaim:
          claimName: v-qwc-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: ogc-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-ogc-service
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: ogc-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: ogc-service
        app.kubernetes.io/instance: qwc
        app.kubernetes.io/name: qwc
    spec:
      containers:
      - env:
        - name: JWT_COOKIE_CSRF_PROTECT
          value: "False"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET_KEY
              name: jwt-key-secret
        - name: SERVICE_MOUNTPOINT
          value: /ows
        image: sourcepole/qwc-ogc-service:v2024.5-lts
        imagePullPolicy: IfNotPresent
        name: uwsgi
        ports:
        - containerPort: 9090
          name: http
        securityContext:
          allowPrivilegeEscalation: true
          fsGroup: 33
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /srv/pg_service.conf
          name: pg-service-conf-secret
          readOnly: true
          subPath: pg_service.conf
        - mountPath: /srv/qwc_service/config
          name: v-qwc-data
          subPath: config
      imagePullSecrets:
      - name: qwc-qwc-dockerregistry
      securityContext: {}
      serviceAccountName: qwc-qwc
      volumes:
      - name: pg-service-conf-secret
        secret:
          items:
          - key: pg_service_conf
            path: pg_service.conf
          secretName: pg-service-conf-secret
      - name: v-qwc-data
        persistentVolumeClaim:
          claimName: v-qwc-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: permalink-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-permalink-service
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: permalink-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: permalink-service
        app.kubernetes.io/instance: qwc
        app.kubernetes.io/name: qwc
    spec:
      containers:
      - env:
        - name: JWT_COOKIE_CSRF_PROTECT
          value: "False"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET_KEY
              name: jwt-key-secret
        - name: SERVICE_MOUNTPOINT
          value: /api/v1/permalink
        image: sourcepole/qwc-permalink-service:v2024.4-lts
        imagePullPolicy: IfNotPresent
        name: uwsgi
        ports:
        - containerPort: 9090
          name: http
        securityContext:
          allowPrivilegeEscalation: true
          fsGroup: 33
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /srv/pg_service.conf
          name: pg-service-conf-secret
          readOnly: true
          subPath: pg_service.conf
        - mountPath: /srv/qwc_service/config
          name: v-qwc-data
          subPath: config
      imagePullSecrets:
      - name: qwc-qwc-dockerregistry
      securityContext: {}
      serviceAccountName: qwc-qwc
      volumes:
      - name: pg-service-conf-secret
        secret:
          items:
          - key: pg_service_conf
            path: pg_service.conf
          secretName: pg-service-conf-secret
      - name: v-qwc-data
        persistentVolumeClaim:
          claimName: v-qwc-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: print-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-print-service
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: print-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: print-service
        app.kubernetes.io/instance: qwc
        app.kubernetes.io/name: qwc
    spec:
      containers:
      - env:
        - name: JWT_COOKIE_CSRF_PROTECT
          value: "False"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET_KEY
              name: jwt-key-secret
        - name: SERVICE_MOUNTPOINT
          value: /api/v1/print
        image: sourcepole/qwc-print-service:v2024.2-lts
        imagePullPolicy: IfNotPresent
        name: uwsgi
        ports:
        - containerPort: 9090
          name: http
        securityContext:
          allowPrivilegeEscalation: true
          fsGroup: 33
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /srv/pg_service.conf
          name: pg-service-conf-secret
          readOnly: true
          subPath: pg_service.conf
        - mountPath: /srv/qwc_service/config
          name: v-qwc-data
          subPath: config
      imagePullSecrets:
      - name: qwc-qwc-dockerregistry
      securityContext: {}
      serviceAccountName: qwc-qwc
      volumes:
      - name: pg-service-conf-secret
        secret:
          items:
          - key: pg_service_conf
            path: pg_service.conf
          secretName: pg-service-conf-secret
      - name: v-qwc-data
        persistentVolumeClaim:
          claimName: v-qwc-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: solr
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-solr
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: solr
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: solr
        app.kubernetes.io/instance: qwc
        app.kubernetes.io/name: qwc
    spec:
      containers:
      - env:
        - name: JWT_COOKIE_CSRF_PROTECT
          value: "False"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET_KEY
              name: jwt-key-secret
        image: solr:8.11-slim
        imagePullPolicy: IfNotPresent
        name: solr
        ports:
        - containerPort: 8983
          hostIP: 127.0.0.1
          name: http
        securityContext:
          allowPrivilegeEscalation: true
          fsGroup: 33
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /gdi_conf
          name: v-qwc-data
          readOnly: true
          subPath: solr/configsets/gdi/conf
        - mountPath: /srv/pg_service.conf
          name: pg-service-conf-secret
          readOnly: true
          subPath: pg_service.conf
        - mountPath: /srv/qwc_service/config
          name: v-qwc-data
          subPath: config
        - mountPath: /var/solr
          name: v-qwc-data
          subPath: solr
      imagePullSecrets:
      - name: qwc-qwc-dockerregistry
      securityContext: {}
      serviceAccountName: qwc-qwc
      volumes:
      - name: pg-service-conf-secret
        secret:
          items:
          - key: pg_service_conf
            path: pg_service.conf
          secretName: pg-service-conf-secret
      - name: v-qwc-data
        persistentVolumeClaim:
          claimName: v-qwc-data
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: qgis-server
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qgis
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qgis
  name: qwc-qgis-qgis-server
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: qgis-server
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qgis
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: admin-gui
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-admin-gui
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: admin-gui
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: auth-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-auth-service
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: auth-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: config-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-config-service
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: config-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: data-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-data-service
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: data-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: document-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-document-service
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: document-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: elevation-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-elevation-service
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: elevation-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: feature-info-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-feature-info-service
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: feature-info-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: fulltext-search-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-fulltext-search-service
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: fulltext-search-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: legend-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-legend-service
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: legend-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: map-viewer
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-map-viewer
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: map-viewer
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: mapinfo-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-mapinfo-service
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: mapinfo-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: ogc-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-ogc-service
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: ogc-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: permalink-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-permalink-service
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: permalink-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: print-service
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-print-service
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: print-service
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: solr
    app.kubernetes.io/instance: qwc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qwc
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: qwc
  name: qwc-qwc-solr
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: solr
      app.kubernetes.io/instance: qwc
      app.kubernetes.io/name: qwc
